# A purrfect theme.
theme = "catppuccin_frappe"

[editor]
# I really don't know how can anyone live w/o relative line numbers.
line-number = "relative"
# Different colors for different modes in the bottom info line.
color-modes = true
# Keeping up w/ good practices.
mouse = false
# Use Nushell for shell commands.
shell = ["nu", "-i", "-c"]
# Instant completions.
completion-timeout = 5
# Enable visual columns.
rulers = [80, 100, 120]
# Enable indent guide.
indent-guides = { render = true }

[editor.lsp]
# Show progress messages from the running langugage servers.
display-messages = true
# Display inlay hints by default if the langugage server supports it.
display-inlay-hints = true

[editor.cursor-shape]
# Different cursor shapes for different modes.
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
# Enable the file picker to detect hidden files.
hidden = false

[keys.normal]
# Delete characters backwards.
D = "delete_char_backward"
# Deselect on <ESC>.
esc = ["collapse_selection", "keep_primary_selection"]
# Send selected text to a tmux pane to the right of the current one.
# Meant to be used in conjunction with the REPL session script.
"A-ret" = ":pipe-to tmux load-buffer - \\; paste-buffer -dpr -t '{right-of}' \\; send-keys -t '{right-of}' C-m"

# "Comma" minor mode -> used as a Vim-inspired "leader" key i.e. for
# user-defined custom mappings.
[keys.normal.","]
# Open a new temporary buffer with `lazydocker` started.
d = [
  ":new",
  ":insert-output lazydocker",
  ":redraw",
  "jump_backward",
  ":reload-all",
]
# Reload/refresh all buffers.
r = ":reload-all"
# Quick configuration reload.
R = ":config-reload"

[keys.normal.",".e]
# Open a new temporary buffer with `lf` started for the current file's directory.
f = [":new", """:insert-output helix-get-file-data.nu 
                  | from nuon 
                  | get 0.fPath
                  | dirname $in 
                  | lf $in""", ":redraw", "jump_backward", ":reload-all"]
# Open a new temporary buffer with `lf` started at the project root.
p = [":new", ":insert-output lf", ":redraw", "jump_backward", ":reload-all"]

[keys.normal.",".g]
# Open a new temporary buffer with `lazygit` started.
g = [
  ":new",
  ":insert-output lazygit",
  ":redraw",
  "jump_backward",
  ":reload-all",
]
# Get git commit information for the current line.
b = [
  """:sh helix-get-file-data.nu 
      | from nuon
      | rename file lineRange
      | update lineRange { str substring 0..($in | str index-of ":" | $in - 1) } 
      | update lineRange { $in | $"($in),($in)"} 
      | git blame $in.0.file -L $in.0.lineRange
      | split column -r " +"
      | get 0.column1
      | if $in =~ "0+" { echo "Not commited yet!" } else { git show $in }""",
]
# Open the current file and line on Github.
o = [
  """:sh helix-get-file-data.nu 
      | from nuon 
      | update lineAndCol { str substring 0..($in | str index-of ":" | $in - 1) } 
      | rename fPath lineNumber
      | [$in.0.fPath $in.0.lineNumber]
      | str join ":"
      | gh browse $in""",
]
# Reset changed lines.
r = [":reset-diff-change"]
