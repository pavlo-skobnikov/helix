# A purrfect theme.
theme = "catppuccin_frappe"

[editor]
# I really don't know how can anyone live w/o relative line numbers.
line-number = "relative"
# Different colors for different modes in the bottom info line.
color-modes = true
# Keeping up w/ good practices.
mouse = false
# Use my Zsh shell.
shell = ["zsh", "-ic"]
# Instant completions.
completion-timeout = 5
# Enable visual columns.
rulers = [80, 100, 120]
# Enable indent guide.
indent-guides = { render = true }

[editor.lsp]
# Show progress messages from the running langugage servers.
display-messages = true
# Display inlay hints by default if the langugage server supports it.
display-inlay-hints = true

[editor.cursor-shape]
# Different cursor shapes for different modes.
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
# Enable the file picker to detect hidden files.
hidden = false

[keys.normal]
# Deselect on <ESC>.
esc = ["collapse_selection", "keep_primary_selection"]
# Send selected text to a tmux pane to the right of the current one.
# Meant to be used in conjunction with the REPL session script.
"A-ret" = ":pipe-to tmux load-buffer - \\; paste-buffer -dpr -t '{right-of}' \\; send-keys -t '{right-of}' C-m"

# "Comma" minor mode -> used as a Vim-inspired "leader" key i.e. for
# user-defined custom mappings.
[keys.normal.","]
# Open a new temporary buffer with `lazydocker` started.
d = [":new", ":insert-output lazydocker", ":redraw", "jump_backward"]
# Open a new temporary buffer with `lf` started.
e = [":new", ":insert-output lf", ":redraw", "jump_backward"]
# Open a new temporary buffer with `lf` started for the current file's directory.
E = [
  ":new",
  ":insert-output helix-get-file-data.sh | awk '{print $1}' | xargs dirname | xargs lf",
  ":redraw",
  "jump_backward"
]
# Open a new temporary buffer with `lazygit` started.
g = [
  ":new",
  ":insert-output lazygit",
  ":redraw",
  "jump_backward",
  ":reload-all",
]
# View the current line on Github.
G = [":sh helix-get-file-data.sh | sed 's/ /:/g' | xargs gh browse"]
# Git blame the current line.
b = [":sh helix-get-file-data.sh | awk '{system(\"git blame \" $1 \" | sed -n \" $2 \"p\")}' | sed 's/^\\([a-f0-9]*\\).*/\\1/' | xargs git show"]
